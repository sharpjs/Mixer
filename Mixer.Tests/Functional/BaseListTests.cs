// Copyright 2023 Subatomix Research Inc.
// SPDX-License-Identifier: ISC

namespace Mixer;

[TestFixture]
public class BaseListTests
{
    [Test]
    public void Simple()
    {
        var result = RunMixinGenerator(
            """
            using Mixer;

            namespace Test;

            class Foo { }
            interface IBar { }

            [Mixin]
            class Source : Foo, IBar { }
            """,
            """
            using Mixer;

            namespace Test;

            [Include<Source>]
            partial class Target { }
            """
        );

        result.ShouldBeGeneratedSources(new()
        {
            ["Test.Target.1.g.cs"] =
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>

            namespace Test;

            #region Source
            #nullable enable

            partial class Target
                : global::Test.Foo, global::Test.IBar
            {
            }

            #nullable restore
            #endregion

            """
        });
    }

    [Test]
    public void ClosedGeneric()
    {
        var result = RunMixinGenerator(
            """
            using Mixer;

            namespace Test;

            interface IFoo<T0, T1> { }
            class Bar { }

            [Mixin]
            class Source : IFoo<int, Bar> { }
            """,
            """
            using Mixer;

            namespace Test;

            [Include<Source>]
            partial class Target { }
            """
        );

        result.ShouldBeGeneratedSources(new()
        {
            ["Test.Target.1.g.cs"] =
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>

            namespace Test;

            #region Source
            #nullable enable

            partial class Target
                : global::Test.IFoo<int, global::Test.Bar>
            {
            }

            #nullable restore
            #endregion

            """
        });
    }

    [Test]
    public void OpenGeneric()
    {
        var result = RunMixinGenerator(
            """
            using Mixer;

            namespace Test;

            interface IFoo<T0, T1> { }
            class Bar { }

            [Mixin]
            class Source<T0, T1> : IFoo<T0, T1> { }
            """,
            """
            using Mixer;

            namespace Test;

            [Include<Source<int, Bar>>]
            partial class Target { }
            """
        );

        // TODO: Should use keyword `int` instead of type name.
        result.ShouldBeGeneratedSources(new()
        {
            ["Test.Target.1.g.cs"] =
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>

            namespace Test;

            #region Source
            #nullable enable

            partial class Target
                : global::Test.IFoo<global::System.Int32, global::Test.Bar>
            {
            }

            #nullable restore
            #endregion

            """
        });
    }
}
