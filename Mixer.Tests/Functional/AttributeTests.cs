// Copyright 2023 Subatomix Research Inc.
// SPDX-License-Identifier: ISC

namespace Mixer.Tests.Functional;

[TestFixture]
public class AttributeTests
{
    [Test]
    public void Simple()
    {
        new FunctionalTestBuilder()
        .WithInput(
            """
            using System;
            using Mixer;

            namespace Test;

            class FooAttribute : Attribute { }

            [Mixin]
            [Foo]
            $source Source { }

            [Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Test.Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>

            namespace Test;

            #region Source
            #nullable enable

            [global::Test.FooAttribute]
            partial $target Target
            {
            }

            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void SharedList()
    {
        new FunctionalTestBuilder()
        .WithInput(
            """
            using System;
            using Mixer;

            namespace Test;

            class FooAttribute : Attribute { }

            [Mixin, Foo]
            $source Source { }

            [Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Test.Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>

            namespace Test;

            #region Source
            #nullable enable

            [global::Test.FooAttribute]
            partial $target Target
            {
            }

            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void MultiLine()
    {
        new FunctionalTestBuilder()
        .WithInput(
            """
            using System;
            using Mixer;

            namespace Test;

            class FooAttribute : Attribute { }

            [Mixin]
            [Foo(
                // stuff
            )]
            $source Source { }

            [Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Test.Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>

            namespace Test;

            #region Source
            #nullable enable

            [global::Test.FooAttribute(
                // stuff
            )]
            partial $target Target
            {
            }

            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void Nested()
    {
        new FunctionalTestBuilder()
        .WithInput(
            """
            using System;
            using Mixer;

            namespace Test;

            class FooAttribute : Attribute { }

            [Mixin]
            $source Source
            {
                [Foo]
                private class Nested { }
            }

            [Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Test.Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>

            namespace Test;

            #region Source
            #nullable enable

            partial $target Target
            {
                [global::Test.FooAttribute]
                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Mixer.Generator", "0.0.0.0")]
                private class Nested { }
            }

            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void CustomMixinAttribute()
    {
        new FunctionalTestBuilder()
        .WithSourceAndTargetKinds(Class)
        .WithMixerAlias("mixer")
        .WithInput(
            """
            extern alias mixer;
            using System;

            namespace Mixer { class MixinAttribute : Attribute { } }

            [global::Mixer.Mixin]
            $source Source { }

            [mixer::Mixer.Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>
            
            #region Source
            #nullable enable
            
            partial $target Target
            {
            }
            
            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void DuplicateMixinAttribute()
    {
        new FunctionalTestBuilder()
        .WithSourceAndTargetKinds(Class)
        .WithMixerAlias("mixer")
        .WithInput(
            """
            extern alias mixer;
            using System;

            namespace Mixer { class MixinAttribute : Attribute { } }

            [global::Mixer.Mixin]
            [mixer ::Mixer.Mixin]
            $source Source { }

            [mixer::Mixer.Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>
            
            #region Source
            #nullable enable
            
            partial $target Target
            {
            }
            
            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void FalseMixinAttribute_NotInMixerNamespace()
    {
        new FunctionalTestBuilder()
        .WithSourceAndTargetKinds(Class)
        .WithInput(
            """
            using System;

            namespace Other { class MixinAttribute : Attribute { } }

            [Other.Mixin]
            [Mixer.Mixin]
            $source Source { }

            [Mixer.Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>
            
            #region Source
            #nullable enable
            
            [global::Other.MixinAttribute]
            partial $target Target
            {
            }
            
            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void FalseMixinAttribute_MixerNamspaceNotInGlobalNamespace()
    {
        new FunctionalTestBuilder()
        .WithSourceAndTargetKinds(Class)
        .WithInput(
            """
            using System;

            namespace Other.Mixer { class MixinAttribute : Attribute { } }

            [Other.Mixer.Mixin]
            [      Mixer.Mixin]
            $source Source { }

            [Mixer.Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>
            
            #region Source
            #nullable enable
            
            [global::Other.Mixer.MixinAttribute]
            partial $target Target
            {
            }
            
            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void FalseMixinAttribute_SneakyAliases()
    {
        new FunctionalTestBuilder()
        .WithSourceAndTargetKinds(Class)
        .WithMixerAlias("mixer")
        .WithInput(
            """
            extern alias mixer;
            using System;
            using Mixer = Other.Mixer;

            namespace Other.Mixer { class MixinAttribute : Attribute { } }

            [       Mixer.MixinAttribute]
            [mixer::Mixer.MixinAttribute]
            $source Source { }

            [mixer::Mixer.Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>
            
            #region Source
            #nullable enable
            
            [       global::Other.Mixer.MixinAttribute]
            partial $target Target
            {
            }
            
            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void FalseMixinAttribute_Nested()
    {
        new FunctionalTestBuilder()
        .WithSourceAndTargetKinds(Class)
        .WithInput(
            """
            using System;
            using Mixer;

            namespace Mixer { class Other { public class MixinAttribute : Attribute { } } }

            [Other.Mixin]
            [Mixer.Mixin]
            $source Source { }

            [Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>
            
            #region Source
            #nullable enable
            
            [global::Mixer.Other.MixinAttribute]
            partial $target Target
            {
            }
            
            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void DuplicateInclude0Attribute()
    {
        new FunctionalTestBuilder()
        .WithInput(
            """
            using Mixer;

            namespace Test;

            [Mixin]
            $source Source { }

            [Include(typeof(Source))]
            [Include(typeof(Source))]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Test.Target.0.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>
            
            namespace Test;

            #region Source
            #nullable enable
            
            partial $target Target
            {
            }
            
            #nullable restore
            #endregion
            """
        )
        .Test();
    }

    [Test]
    public void DuplicateInclude1Attribute()
    {
        new FunctionalTestBuilder()
        .WithInput(
            """
            using Mixer;

            namespace Test;

            [Mixin]
            $source Source { }

            [Include<Source>]
            [Include<Source>]
            partial $target Target { }
            """
        )
        .ExpectGeneratedSource(
            "Test.Target.1.g.cs",
            """
            // <auto-generated>
            //   This code file was generated by the 'Mixer' NuGet package.
            //   See https://github.com/sharpjs/Mixer for more information.
            // </auto-generated>
            
            namespace Test;

            #region Source
            #nullable enable
            
            partial $target Target
            {
            }
            
            #nullable restore
            #endregion
            """
        )
        .Test();
    }
}
